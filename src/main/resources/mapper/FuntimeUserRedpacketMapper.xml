<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rzyou.funtime.mapper.FuntimeUserRedpacketMapper">
  <resultMap id="BaseResultMap" type="com.rzyou.funtime.entity.FuntimeUserRedpacket">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="to_user_id" jdbcType="BIGINT" property="toUserId" />
    <result column="room_id" jdbcType="BIGINT" property="roomId" />
    <result column="type"  property="type" />
    <result column="redpacket_num" jdbcType="INTEGER" property="redpacketNum" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="redpacket_desc" jdbcType="VARCHAR" property="redpacketDesc" />
    <result column="bestow_condition" jdbcType="INTEGER" property="bestowCondition" />
    <result column="gift_id" jdbcType="INTEGER" property="giftId" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="invalid_time" jdbcType="TIMESTAMP" property="invalidTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="grabAmount"  property="grabAmount" />
    <result column="grabNum"  property="grabNum" />
    <result column="animation_type"  property="animationType" />
    <result column="animation_url"  property="animationUrl" />
    <result column="nickname"  property="nickname" />
    <result column="gift_name"  property="giftName" />
    <result column="image_url"  property="imageUrl" />
    <result column="sex"  property="sex" />
    <result column="selfGrab"  property="selfGrab" />

    <result column="portrait_address"  property="portraitAddress" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, redpacket_num, amount, redpacket_desc, bestow_condition, gift_id, state, 
    invalid_time, create_time,room_id,type,to_user_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_funtime_user_redpacket
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="getRedpacketListByRoomId"  resultMap="BaseResultMap">
    select
    t.id, t.user_id, t.redpacket_num, t.amount, t.redpacket_desc, t.bestow_condition, t.gift_id, t.state,g.gift_name,
    g.animation_type,g.animation_url,g.image_url,u.nickname,u.portrait_address,u.sex

    ,(select count(l.id) from t_funtime_user_redpacket_detail l where l.redpacket_id = t.id and l.grab_user_id = #{userId}) selfGrab
    from t_funtime_user_redpacket t left join t_funtime_gift g on t.gift_id = g.id
      inner join t_funtime_user u on t.user_id = u.id
    where t.room_id = #{roomId}
     and t.state in (1,2)
    order by id desc
  </select>

  <select id="getRedpacketInfoByUserId" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    t.id, t.user_id, t.redpacket_num, t.amount, t.redpacket_desc, t.bestow_condition, t.gift_id, t.state,
    t.invalid_time, t.create_time
    ,sum(l.amount) grabAmount,count(l.id) grabNum
    from t_funtime_user_redpacket t left join t_funtime_user_redpacket_detail l on t.id = l.redpacket_id and l.grab_user_id is not null
    where t.user_id = #{userId}
    <if test="startDate!=null and endDate!=null">
      and t.create_time between #{startDate} and #{endDate}
    </if>
    group by t.id
    order by t.id desc
  </select>
  <select id="getRedpacketInfoById"  resultMap="BaseResultMap">
    select
    t.id, t.user_id, t.redpacket_num, t.amount, t.redpacket_desc, t.bestow_condition, t.gift_id, t.state,
    t.invalid_time, t.create_time,u.nickname,u.portrait_address,u.sex
    ,ifnull((select dl.amount from t_funtime_user_redpacket_detail dl where dl.redpacket_id = t.id and dl.grab_user_id = #{userId} limit 1),0) grabAmount
    ,count(l.id) grabNum
    from t_funtime_user_redpacket t left join t_funtime_user_redpacket_detail l on t.id = l.redpacket_id and l.grab_user_id is not null
      inner join t_funtime_user u on t.user_id = u.id
    where t.id = #{id}
    group by t.id

  </select>
  <select id="getRedpacketListInvalid" resultMap="BaseResultMap">
    select
    t.id, t.user_id, t.redpacket_num, t.amount
    ,sum(l.amount) grabAmount,count(l.id) grabNum
    from t_funtime_user_redpacket t inner join t_funtime_user_redpacket_detail l on t.id = l.redpacket_id

    where NOW()>t.invalid_time and  t.state = 1 and l.grab_user_id is null
    group by t.id
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_funtime_user_redpacket
    where id = #{id,jdbcType=BIGINT}
  </delete>

  <insert id="insertSelective" parameterType="com.rzyou.funtime.entity.FuntimeUserRedpacket" keyProperty="id" useGeneratedKeys="true">
    insert into t_funtime_user_redpacket
    <trim prefix="(" suffix=")" suffixOverrides=",">

      <if test="userId != null">
        user_id,
      </if>
      <if test="toUserId != null">
        to_user_id,
      </if>
      <if test="roomId != null">
        room_id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="redpacketNum != null">
        redpacket_num,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="redpacketDesc != null">
        redpacket_desc,
      </if>
      <if test="bestowCondition != null">
        bestow_condition,
      </if>
      <if test="giftId != null">
        gift_id,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="invalidTime != null">
        invalid_time,
      </if>

    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">

      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="toUserId != null">
        #{toUserId,jdbcType=BIGINT},
      </if>
      <if test="roomId != null">
        #{roomId,jdbcType=BIGINT},
      </if>
      <if test="type != null">
        #{type},
      </if>
      <if test="redpacketNum != null">
        #{redpacketNum,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="redpacketDesc != null">
        #{redpacketDesc,jdbcType=VARCHAR},
      </if>
      <if test="bestowCondition != null">
        #{bestowCondition,jdbcType=INTEGER},
      </if>
      <if test="giftId != null">
        #{giftId,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="invalidTime != null">
        #{invalidTime,jdbcType=TIMESTAMP},
      </if>

    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.rzyou.funtime.entity.FuntimeUserRedpacket">
    update t_funtime_user_redpacket
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="redpacketNum != null">
        redpacket_num = #{redpacketNum,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="redpacketDesc != null">
        redpacket_desc = #{redpacketDesc,jdbcType=VARCHAR},
      </if>
      <if test="bestowCondition != null">
        bestow_condition = #{bestowCondition,jdbcType=INTEGER},
      </if>
      <if test="giftId != null">
        gift_id = #{giftId,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="invalidTime != null">
        invalid_time = #{invalidTime,jdbcType=TIMESTAMP},
      </if>

    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateStateById" >
    update t_funtime_user_redpacket
    <set>

      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>


    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateStateForInvalid" >
    update t_funtime_user_redpacket

        set state = 3

    where   NOW()>invalid_time and state = 1
  </update>

</mapper>