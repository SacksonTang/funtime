<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rzyou.funtime.mapper.FuntimeNoticeMapper">
  <resultMap id="BaseResultMap" type="com.rzyou.funtime.entity.FuntimeNotice">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="notice_type" jdbcType="INTEGER" property="noticeType" />
    <result column="data" jdbcType="VARCHAR" property="data" />
    <result column="operation_num" jdbcType="INTEGER" property="operationNum" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, notice_type, data, state, create_time, update_time,operation_num
  </sql>
  <select id="getGroupFailNotice"  resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_funtime_notice
    where notice_type in (1,2,3,4,5,6,7,8,10,11,12,13,14,17,18) and  state in (0,2) and 3 >= operation_num
  </select>

  <select id="getSingleFailNotice"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_funtime_notice
    where notice_type in (15,16) and  state in (0,2) and 3 >= operation_num
  </select>
  <select id="getAllRoomFailNotice"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_funtime_notice
    where notice_type in (9) and  state in (0,2) and 3 >= operation_num order by id desc limit 1
  </select>
  <select id="getAllFailNotice"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_funtime_notice
    where notice_type in (10001) and  state in (0,2) and 3 >= operation_num order by id desc limit 1
  </select>

  <insert id="insertSelective" parameterType="com.rzyou.funtime.entity.FuntimeNotice">
    insert into t_funtime_notice
    <trim prefix="(" suffix=")" suffixOverrides=",">

      <if test="noticeType != null">
        notice_type,
      </if>
      <if test="data != null">
        data,
      </if>
      <if test="state != null">
        state,
      </if>

      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">

      <if test="noticeType != null">
        #{noticeType,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        #{data,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>

      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateState" >
    update t_funtime_notice
    <set>

      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
        operation_num = operation_num+1,
        update_time = NOW(),

    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>

</mapper>