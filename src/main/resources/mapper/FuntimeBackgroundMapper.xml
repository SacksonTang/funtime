<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rzyou.funtime.mapper.FuntimeBackgroundMapper">

  <select id="getBackgroundList" parameterType="java.lang.Long" resultType="java.util.Map">
    select
    t.id,t.type,t.background_url as backgroundUrl,t.background_url2 as backgroundUrl2,t.thumbnail_url as thumbnailUrl,
    t.original_price as originalPrice,t.activity_price as activityPrice,t.discount,
    t.show_price as showPrice,
    DATE_FORMAT(d.end_time,'%Y-%m-%d %H:%i:%s') as endTime,
    CONCAT('剩余',DATEDIFF(d.end_time,now()),'天') content,
    IF(d.background_id is null,0,1) isOwner,
    IF(m.background_id is null,0,1) isCurrentPage
    from  t_funtime_background t left join t_funtime_user_background d
            on d.background_id = t.id and d.user_id = #{userId}
            left join t_funtime_chatroom m on t.id = m.background_id and m.user_id = #{userId}
    where t.flag = 1
    order by t.sort asc
  </select>
  <select id="getBackgroundInfoById"  resultType="java.util.Map">
    select
    t.type,t.days,
    IF(t.activity_price is null,t.original_price,t.activity_price) as price,
    d.id as ubId

    from  t_funtime_background t left join t_funtime_user_background d
            on d.background_id = t.id and d.user_id = #{userId}
    where t.id = #{id}  and t.flag = 1
    limit 1
  </select>
  <select id="getBackgroundIdForType1"  resultType="java.lang.Integer">
    select
    id
    from  t_funtime_background
    where  type = 1 and flag = 1
    limit 1
  </select>
  <select id="getBackgroundUrlForType1"  resultType="java.util.Map">
    select
    id,background_url as backgroundUrl,background_url2 as backgroundUrl2
    from  t_funtime_background
    where  type = 1 and flag = 1
    limit 1
  </select>
  <select id="getBackgroundUrlById"  resultType="java.util.Map" >
    select
    t.type,t.background_url as backgroundUrl,t.background_url2 as backgroundUrl2,
    IFNULL(d.background_id,0) isOwner
    from  t_funtime_background t left join t_funtime_user_background d
           on d.background_id = t.id and d.user_id = #{userId}
    where t.id = #{id} and t.flag = 1
  </select>
  <select id="getBackgroundThumbnailById"  resultType="java.util.Map" >
    select
    t.thumbnail_url as thumbnailUrl ,activity_price as activityPrice
    from  t_funtime_background t
    where t.id = #{id} and t.flag = 1
  </select>
  <select id="getBackgroundDaysById"  resultType="java.lang.Integer" >
    select
    t.days
    from  t_funtime_background t
    where t.id = #{id} and t.flag = 1
  </select>
  <select id="getBackgroundForExpiry"  resultType="java.util.Map" >
    select
    distinct m.id,m.user_id as userId,d.id as ubId
    from  t_funtime_user_background d inner join t_funtime_chatroom m
           on d.background_id = m.background_id and d.user_id = m.user_id
    where d.background_type in (3,4) and now()>d.end_time
  </select>
  <delete id="deleteUserBackgroundById">
    delete from t_funtime_user_background where id = #{id}
  </delete>
    <insert id="insertUserBackground" parameterType="com.rzyou.funtime.entity.FuntimeUserBackground">
        insert into t_funtime_user_background(user_id,background_id,background_type,price,end_time)
        values (#{userId},#{backgroundId},#{backgroundType},#{price},#{endTime})
    </insert>
    <update id="updateUserBackground" parameterType="com.rzyou.funtime.entity.FuntimeUserBackground">
      update t_funtime_user_background
      <set>
        <if test="backgroundType != null">
          background_type = #{backgroundType},
        </if>
        <if test="price != null">
          price = #{price},
        </if>
        <if test="days != null">
          end_time = date_add(IF(end_time>NOW(),end_time,NOW()), interval ${days} day),
        </if>

      </set>
      where id = #{id}
    </update>
    <insert id="insertUserBackgroundRecord" parameterType="com.rzyou.funtime.entity.FuntimeUserBackground" useGeneratedKeys="true" keyProperty="id">
        insert into t_funtime_user_account_background_record(user_id,background_id,background_type,price,days)
        values (#{userId},#{backgroundId},#{backgroundType},#{price},#{days})
    </insert>

</mapper>