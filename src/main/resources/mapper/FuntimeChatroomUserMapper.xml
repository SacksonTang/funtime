<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rzyou.funtime.mapper.FuntimeChatroomUserMapper">
  <resultMap id="BaseResultMap" type="com.rzyou.funtime.entity.FuntimeChatroomUser">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="room_id" jdbcType="BIGINT" property="roomId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="user_role" jdbcType="INTEGER" property="userRole" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="room_no"  property="roomNo" />
    <result column="is_sync"  property="isSync" />
    <result column="flag"  property="flag" />
  </resultMap>
  <sql id="Base_Column_List">
    id, room_id, user_id, user_role, create_time,room_no,is_sync,flag
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_funtime_chatroom_user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="getRoomUserById"  resultType="java.util.Map">
    select
     u.id id,u.nickname,u.portrait_address portraitAddress,u.sign_text signText,u.sex,u.show_id showId
    from t_funtime_chatroom_user m inner join t_funtime_user u on m.user_id = u.id
    where m.room_id = #{roomId}  and m.flag = 1 and m.user_role = 4
    <if test="nickname!=null and nickname!=''">
      and u.nickname = #{nickname}
    </if>
     order by m.create_time desc
  </select>
  <select id="checkUserIsExist" resultType="java.lang.Long">
    select
    id
    from t_funtime_chatroom_user
    where room_id = #{roomId} and user_id = #{userId} and flag = 1 limit 1
  </select>
  <select id="getRoomNoByRoomIdAndUser" resultType="java.util.Map">
    SELECT
        c1.room_no AS roomNo,
        ( SELECT count( c2.id ) FROM t_funtime_chatroom_user c2 WHERE c2.room_no = c1.room_no ) roomNoCount
    FROM
        t_funtime_chatroom_user c1
    WHERE
        c1.room_id = #{roomId}
        AND c1.user_id = #{userId}
        AND c1.flag = 1
    GROUP BY
        c1.room_no

  </select>
  <select id="getRoomNoByRoomIdAll" resultType="java.lang.String" parameterType="java.lang.Long">
    select
    room_no
    from t_funtime_chatroom_user
    where room_id = #{roomId}
    group by room_no
  </select>
  <select id="getRoomNoByRoomId" resultType="java.util.Map" parameterType="java.lang.Long">
    select
    room_no roomNo,count(id) roomNoCount
    from t_funtime_chatroom_user
    where room_id = #{roomId} and flag = 1
    group by room_no
  </select>
  <select id="getJoinRoomUser" resultType="java.lang.String" >
    select
    room_no
    from t_funtime_chatroom_user
    where flag = 1 and is_sync = 2
    group by room_no
  </select>
  <select id="getJoinRoomUserByRoomNo" resultType="java.lang.Long" parameterType="java.lang.String">
    select
     user_id
    from t_funtime_chatroom_user
    where room_no = #{roomNo} and flag = 1 and is_sync = 2
  </select>
  <select id="getDeleteRoomUser" resultType="java.lang.String" >
    select
    room_no
    from t_funtime_chatroom_user
    where flag = 2 and is_sync = 2
    group by room_no
  </select>
  <select id="getAllRoomUser" resultType="java.lang.String" >
    select
    user_id
    from t_funtime_chatroom_user
    where flag = 1 and is_sync = 1
    group by user_id
  </select>
  <select id="getDeleteRoomUserByRoomNo" resultType="java.lang.String" parameterType="java.lang.String">
    select
    user_id
    from t_funtime_chatroom_user
    where room_no = #{roomNo} and flag = 2 and is_sync = 2
  </select>
  <select id="getRoomUserByRoomId" resultType="java.lang.Long" parameterType="java.lang.Long">
    select
    user_id
    from t_funtime_chatroom_user
    where room_id = #{roomId} and flag = 1
  </select>

  <select id="getRoomByUserId" resultType="java.lang.Long" parameterType="java.lang.Long">
    select
    room_id
    from t_funtime_chatroom_user
    where user_id = #{userId} and flag = 1
  </select>

  <delete id="deleteRoomUser" parameterType="java.lang.String">
    delete from t_funtime_chatroom_user
    where room_no = #{roomNo} and flag = 2 and is_sync = 2
  </delete>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_funtime_chatroom_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByRoomId" parameterType="java.lang.Long">
    delete from t_funtime_chatroom_user
    where room_id = #{roomId}
  </delete>
  <update id="updateRoomNoByRoomId" >
    update t_funtime_chatroom_user set roomNo = #{roomNo}
    where room_id = #{roomId} and user_role = 1
  </update>
  <insert id="insertForRoomJoin" parameterType="com.rzyou.funtime.entity.FuntimeChatroomUser">
    insert into t_funtime_chatroom_user (room_id, user_id,
      user_role,room_no)
    select #{roomId}, #{userId},
      #{userRole},#{roomNo} from DUAL where 200> (select count(id) from t_funtime_chatroom_user where room_no = #{roomNo} and flag = 1)
  </insert>

  <insert id="insertSelective" parameterType="com.rzyou.funtime.entity.FuntimeChatroomUser" keyProperty="id" useGeneratedKeys="true">
    insert into t_funtime_chatroom_user
    <trim prefix="(" suffix=")" suffixOverrides=",">

      <if test="roomId != null">
        room_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="userRole != null">
        user_role,
      </if>
      <if test="roomNo != null">
        room_no,
      </if>
      <if test="isSync != null">
        is_sync,
      </if>

    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">

      <if test="roomId != null">
        #{roomId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="userRole != null">
        #{userRole,jdbcType=INTEGER},
      </if>
      <if test="roomNo != null">
        #{roomNo},
      </if>
      <if test="isSync != null">
        #{isSync},
      </if>

    </trim>
  </insert>
  <update id="updateUserRoleById">
    update t_funtime_chatroom_user set user_role = #{userRole} where id = #{id}
  </update>
  <update id="updateSyncByRoomNo">
    update t_funtime_chatroom_user set is_sync = 1 where room_no = #{roomNo} and user_id = #{userId}
  </update>

</mapper>