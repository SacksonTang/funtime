<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rzyou.funtime.mapper.FuntimeUserConcernMapper">
  <resultMap id="BaseResultMap" type="com.rzyou.funtime.entity.FuntimeUserConcern">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="to_user_id" jdbcType="BIGINT" property="toUserId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, to_user_id, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_funtime_user_concern
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_funtime_user_concern
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <select id="checkRecordExist"  resultType="java.lang.Long">
    select
    id
    from t_funtime_user_concern
    where user_id = #{userId} and to_user_id = #{toUserId} limit 1
  </select>


  <insert id="insertSelective" parameterType="com.rzyou.funtime.entity.FuntimeUserConcern">
    insert into t_funtime_user_concern
    <trim prefix="(" suffix=")" suffixOverrides=",">

      <if test="userId != null">
        user_id,
      </if>
      <if test="toUserId != null">
        to_user_id,
      </if>

    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">

      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="toUserId != null">
        #{toUserId,jdbcType=BIGINT},
      </if>

    </trim>
  </insert>

  <select id="checkFriendExist" resultType="java.lang.Integer">
    select
    1
    from t_funtime_user_friend
    where user_id = #{userId} and to_user_id = #{toUserId}
  </select>

  <insert id="insertUserFriend">
    insert into t_funtime_user_friend (user_id,to_user_id) values (#{userId},#{toUserId})
  </insert>

  <delete id="delUserFriend">
    delete from t_funtime_user_friend where user_id = #{userId} and to_user_id = #{toUserId}
  </delete>

</mapper>