<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rzyou.funtime.mapper.FuntimeUserAccountGoldLogMapper">
  <resultMap id="BaseResultMap" type="com.rzyou.funtime.entity.FuntimeUserAccountGoldLog">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="relation_id" jdbcType="BIGINT" property="relationId" />
    <result column="action_type" jdbcType="VARCHAR" property="actionType" />
    <result column="operation_type" jdbcType="VARCHAR" property="operationType" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, relation_id, action_type, operation_type, amount, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_funtime_user_account_gold_log
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_funtime_user_account_gold_log
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.rzyou.funtime.entity.FuntimeUserAccountGoldLog">
    insert into t_funtime_user_account_gold_log (id, user_id, relation_id,
      action_type, operation_type, amount, 
      create_time)
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{relationId,jdbcType=BIGINT}, 
      #{actionType,jdbcType=VARCHAR}, #{operationType,jdbcType=VARCHAR}, #{amount,jdbcType=DECIMAL}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.rzyou.funtime.entity.FuntimeUserAccountGoldLog">
    insert into t_funtime_user_account_gold_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="relationId != null">
        relation_id,
      </if>
      <if test="actionType != null">
        action_type,
      </if>
      <if test="operationType != null">
        operation_type,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="relationId != null">
        #{relationId,jdbcType=BIGINT},
      </if>
      <if test="actionType != null">
        #{actionType,jdbcType=VARCHAR},
      </if>
      <if test="operationType != null">
        #{operationType,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.rzyou.funtime.entity.FuntimeUserAccountGoldLog">
    update t_funtime_user_account_gold_log
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="relationId != null">
        relation_id = #{relationId,jdbcType=BIGINT},
      </if>
      <if test="actionType != null">
        action_type = #{actionType,jdbcType=VARCHAR},
      </if>
      <if test="operationType != null">
        operation_type = #{operationType,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rzyou.funtime.entity.FuntimeUserAccountGoldLog">
    update t_funtime_user_account_gold_log
    set user_id = #{userId,jdbcType=BIGINT},
      relation_id = #{relationId,jdbcType=BIGINT},
      action_type = #{actionType,jdbcType=VARCHAR},
      operation_type = #{operationType,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>