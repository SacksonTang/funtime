<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rzyou.funtime.mapper.FuntimeUserAccountRedpacketRecordMapper">
  <resultMap id="BaseResultMap" type="com.rzyou.funtime.entity.FuntimeUserAccountRedpacketRecord">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
    <result column="detail_id" jdbcType="BIGINT" property="detailId" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="send_time" jdbcType="TIMESTAMP" property="sendTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="tag_id" jdbcType="INTEGER" property="tagId" />
    <result column="gift_record_id" jdbcType="INTEGER" property="giftRecordId" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="portrait_address"  property="portraitAddress" />
    <result column="tag_name"  property="tagName" />
    <result column="sex"  property="sex" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, detail_id, amount, send_time, create_time, tag_id,order_no,gift_record_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_funtime_user_account_redpacket_record
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="getRedpacketOfRecieveForPage"  resultMap="BaseResultMap">
    select
     d.id, d.amount, d.send_time, d.create_time, d.tag_id,d.order_no,d.gift_record_id,
     u.nickname
    from t_funtime_user_account_redpacket_record d inner join t_funtime_user_redpacket_detail l on d.detail_id = l.id
      inner join t_funtime_user_redpacket t on l.redpacket_id = t.id
      inner join t_funtime_user u on t.user_id = u.id
    where  d.user_id = #{userId}
      and d.create_time between #{startDate} and #{endDate}

    order by d.id desc
  </select>
  <select id="getSumGrabAmountById"  resultType="java.math.BigDecimal">
    select
     sum(amount)

    from t_funtime_user_account_redpacket_record
    where  user_id = #{userId}
      and create_time between #{startDate} and #{endDate}


  </select>
  <select id="getSumGrabTagsById"  resultType="java.util.Map">
    select
     d.tag_id tagId
     ,case when d.tag_id = 1 then '首榜'
           when d.tag_id = 2 then '运气王'
           when d.tag_id = 3 then '小幸运'
           when d.tag_id = 4 then '小可怜'
           end tagName
     ,count(d.id) tagTotal

    from t_funtime_user_account_redpacket_record d
    where  d.user_id = #{userId}
      and d.create_time between #{startDate} and #{endDate}
      and d.tag_id is not null
      group by d.tag_id


  </select>
  <select id="getRedpacketRecordByredId"  parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    d.id, d.amount
    from t_funtime_user_account_redpacket_record d inner join t_funtime_user_redpacket_detail l on d.detail_id = l.id
    where l.redpacket_id = #{redId}
    order by d.amount desc,d.id asc
  </select>
  <select id="getRedpacketRecordByRedpacketId"  parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    d.id, d.amount,d.create_time,u.nickname,u.portrait_address,u.sex
    ,d.tag_id
    ,case when d.tag_id = 1 then '首榜'
           when d.tag_id = 2 then '运气王'
           when d.tag_id = 3 then '小幸运'
           when d.tag_id = 4 then '小可怜'
           end tag_name
    ,d.user_id
    from t_funtime_user_account_redpacket_record d inner join t_funtime_user_redpacket_detail l on d.detail_id = l.id
      inner join t_funtime_user u on d.user_id = u.id
    where l.redpacket_id = #{redId}
    order by d.id desc
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_funtime_user_account_redpacket_record
    where id = #{id,jdbcType=BIGINT}
  </delete>

  <insert id="insertSelective" parameterType="com.rzyou.funtime.entity.FuntimeUserAccountRedpacketRecord" keyProperty="id" useGeneratedKeys="true">
    insert into t_funtime_user_account_redpacket_record
    <trim prefix="(" suffix=")" suffixOverrides=",">

      <if test="userId != null">
        user_id,
      </if>
      <if test="orderNo != null">
        order_no,
      </if>
      <if test="detailId != null">
        detail_id,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="sendTime != null">
        send_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="tagId != null">
        tag_id,
      </if>
      <if test="giftRecordId != null">
        gift_record_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">

      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="orderNo != null">
        #{orderNo},
      </if>
      <if test="detailId != null">
        #{detailId,jdbcType=BIGINT},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="sendTime != null">
        #{sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="tagId != null">
        #{tagId,jdbcType=INTEGER},
      </if>
      <if test="giftRecordId != null">
        #{giftRecordId},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.rzyou.funtime.entity.FuntimeUserAccountRedpacketRecord">
    update t_funtime_user_account_redpacket_record
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="detailId != null">
        detail_id = #{detailId,jdbcType=BIGINT},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="sendTime != null">
        send_time = #{sendTime,jdbcType=TIMESTAMP},
      </if>

      <if test="tagId != null">
        tag_id = #{tagId,jdbcType=INTEGER},
      </if>
      <if test="giftRecordId != null">
        gift_record_id=#{giftRecordId},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>

  <update id="updateTagById" >
    update t_funtime_user_account_redpacket_record

       set tag_id = #{tagId,jdbcType=INTEGER}

    where id = #{id,jdbcType=BIGINT}
  </update>

</mapper>